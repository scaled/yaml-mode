name: YAML
scopeName: source.yaml
repository:
 comment:
  multi:
   name: comment.line.number-sign.yaml
   begin: (?<=^|\s)#(?!\{)
   bcaps: 0=punctuation.definition.comment.yaml
   end: $
 constants:
  single:
   name: constant.language.yaml
   pattern: (?<=\s)(true|false|null|True|False|Null|TRUE|FALSE|NULL|~)(?=\s*$)
 date:
  single:
   pattern: ([0-9]{4}-[0-9]{2}-[0-9]{2})\s*($|(?=#)(?!#\{))
   caps: 1=constant.other.date.yaml
 escaped_char:
  single:
   name: constant.character.escape.yaml
   pattern: \\u[A-Fa-f0-9]{4}
  single:
   name: constant.character.escape.yaml
   pattern: \\U[A-Fa-f0-9]{8}
  single:
   name: constant.character.escape.yaml
   pattern: \\x[0-9A-Fa-f]{2}
  single:
   name: constant.character.escape.yaml
   pattern: \\[0abtnvfre "/\\N_LP]
  single:
   name: invalid.illegal.escape.yaml
   pattern: \\(u.{4}|U.{8}|x.{2}|.)
 numeric:
  single:
   name: constant.numeric.integer.yaml
   pattern: [-+]?[0-9]+(?=\s*($|#(?!#\{)))
  single:
   name: constant.numeric.octal.yaml
   pattern: 0o[0-7]+(?=\s*($|#(?!#\{)))
  single:
   name: constant.numeric.hexadecimal.yaml
   pattern: 0x[0-9a-fA-F]+(?=\s*($|#(?!#\{)))
  single:
   name: constant.numeric.float.yaml
   pattern: [-+]?(.[0-9]+|[0-9]+(.[0-9]*)?)([eE][-+]?[0-9]+)?(?=\s*($|#(?!#\{)))
  single:
   name: constant.numeric.float.yaml
   pattern: [-+]?(.inf|.Inf|.INF)(?=\s*($|#(?!#\{)))
  single:
   name: constant.numeric.float.yaml
   pattern: (.nan|.NaN|.NAN)(?=\s*($|#(?!#\{)))
 scalar-content:
  include: #comment
  single:
   name: punctuation.definition.tag.non-specific.yaml
   pattern: !(?=\s)
  include: #constants
  include: #date
  include: #numeric
  include: #strings
 strings:
  multi:
   name: string.quoted.double.yaml
   begin: "
   bcaps: 0=punctuation.definition.string.begin.yaml
   end: "
   ecaps: 0=punctuation.definition.string.end.yaml
   patterns:
    include: #escaped_char
  multi:
   name: string.quoted.single.yaml
   begin: '
   bcaps: 0=punctuation.definition.string.begin.yaml
   end: '
   ecaps: 0=punctuation.definition.string.end.yaml
   patterns:
    single:
     name: constant.character.escape.yaml
     pattern: ''
  multi:
   name: string.interpolated.yaml
   begin: `
   bcaps: 0=punctuation.definition.string.begin.yaml
   end: `
   ecaps: 0=punctuation.definition.string.end.yaml
   patterns:
    include: #escaped_char
  single:
   name: string.unquoted.yaml
   pattern: [^\s"'\n](?!\s*#(?!\{))([^#\n]|((?<!\s)#))*
 variables:
  single:
   name: variable.other.yaml
   pattern: (&|\*)\w+$
   caps: 1=punctuation.definition.variable.yaml
patterns:
 include: #comment
 single:
  name: invalid.illegal.whitespace.yaml
  pattern: \t+
 single:
  name: punctuation.definition.directives.end.yaml
  pattern: ^---
 single:
  name: punctuation.definition.document.end.yaml
  pattern: ^\.\.\.
 multi:
  begin: ^(\s*)(?:(-)|(?:(?:(-)(\s*))?([^!@#%&*>,][^:#]*\S)\s*(:)))(?:\s+((!)[^!\s]+))?\s+(?=\||>)
  bcaps: 2=punctuation.definition.entry.yaml 3=punctuation.definition.entry.yaml 5=entity.name.tag.yaml 6=punctuation.separator.key-value.yaml 7=keyword.other.tag.local.yaml 8=punctuation.definition.tag.local.yaml
  end: ^((?!$)(?!\1\s+)|(?=\s\4(-|[^\s!@#%&*>,].*:\s+)))
  patterns:
   include: #comment
   include: #constants
 multi:
  begin: ^(\s*)([^!@#%&*>,][^:#]*\S)\s*(:)(?:\s+((!)[^!\s]+))?\s+(?=\||>)
  bcaps: 2=entity.name.tag.yaml 3=punctuation.separator.key-value.yaml 4=keyword.other.tag.local.yaml 5=punctuation.definition.tag.local.yaml
  end: ^(?!$)(?!\1\s+)
  patterns:
   include: #comment
   include: #constants
 single:
  pattern: (<<)\s*(:)\s+(.+)$
  caps: 1=entity.name.tag.merge.yaml 2=punctuation.separator.key-value.yaml
 multi:
  begin: (?>^(\s*)(-)?\s*)([^!{@#%&*>,'"][^#]*?)(:)\s+((!!)omap)?
  bcaps: 2=punctuation.definition.entry.yaml 3=entity.name.tag.yaml 4=punctuation.separator.key-value.yaml 5=keyword.other.omap.yaml 6=punctuation.definition.tag.omap.yaml
  end: ^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))
  patterns:
   include: #scalar-content
 multi:
  begin: ^(\s*)(-)?\s*(?:((')([^']*?)('))|((")([^"]*?)(")))(:)\s+((!!)omap)?
  bcaps: 2=punctuation.definition.entry.yaml 3=string.quoted.single.yaml 4=punctuation.definition.string.begin.yaml 5=entity.name.tag.yaml 6=punctuation.definition.string.end.yaml 7=string.quoted.double.yaml 8=punctuation.definition.string.begin.yaml 9=entity.name.tag.yaml 10=punctuation.definition.string.end.yaml 11=punctuation.separator.key-value.yaml 12=keyword.other.omap.yaml 13=punctuation.definition.tag.omap.yaml
  end: ^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))
  patterns:
   include: #scalar-content
 multi:
  begin: ^(\s*)(-)\s+(?:((!!)omap)|((!)[^!\s]+)|(?![!@#%&*>,]))
  bcaps: 2=punctuation.definition.entry.yaml 3=keyword.other.omap.yaml 4=punctuation.definition.tag.omap.yaml 5=keyword.other.tag.local.yaml 6=punctuation.definition.tag.local.yaml
  end: ^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))
  patterns:
   include: #scalar-content
 include: #variables
 include: #strings
